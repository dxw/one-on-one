name: One to one notes

on:
  schedule:
    - cron: 0 17 * * MON

jobs:
  one-to-one-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Set configurable environment variables
        run: |
          echo ::set-env name=WEEKS_BETWEEN_MEETINGS::'1'

          # Set this to the date of the Monday of a past week with a
          # meeting in it.
          #
          # Supports ISO 8601 format dates, e.g. "2020-01-31".
          echo ::set-env name=MEETING_BASE_WEEK::'TODO'

          echo ::set-env name=MANAGER_GITHUB_USERNAME::'TODO'
          echo ::set-env name=REPORT_GITHUB_USERNAME::'TODO'

      - name: Set generated environment variables
        run: |
          echo ::set-env name=BRANCH_NAME::"one-to-one/$(date --date "+$WEEKS_BETWEEN_MEETINGS week" '+%F')"
          echo ::set-env name=FILE_NAME::"$(date --date "+$WEEKS_BETWEEN_MEETINGS week" '+%F')-one-to-one.md"
          echo ::set-env name=TITLE::"1:1 on $(date --date "+$WEEKS_BETWEEN_MEETINGS week" '+%d %B %Y')"

      - name: Check week
        run: |
          SECONDS_SINCE_BASE_WEEK=$(($(date '+%s') - $(date --date "$MEETING_BASE_WEEK" '+%s')))
          WEEKS_SINCE_BASE_WEEK=$(($SECONDS_SINCE_BASE_WEEK / (60 * 60 * 24 * 7)))

          if [ $(($WEEKS_SINCE_BASE_WEEK % $WEEKS_BETWEEN_MEETINGS)) = 0 ]; then
            echo ::set-env name=RUN_THIS_TIME::1
          fi

      - name: Checkout repository
        if: env.RUN_THIS_TIME
        uses: actions/checkout@v2

      - name: Create new notes template file
        if: env.RUN_THIS_TIME
        run: |
          cp meeting-notes/templates/one-to-one.md "meeting-notes/$FILE_NAME"
          sed -i "s~{{TITLE}}~$TITLE~g" "meeting-notes/$FILE_NAME"

      - name: Commit and push notes template file to new branch
        if: env.RUN_THIS_TIME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"
          git checkout -b "$BRANCH_NAME"
          git add .
          git commit -m "Create a meeting notes template"
          git push --force --set-upstream "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git" "$BRANCH_NAME"

      - name: Open pull request
        if: env.RUN_THIS_TIME
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const createPull = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: process.env.TITLE,
              body: "Add any notes for the 1:1",
              head: process.env.BRANCH_NAME,
              base: "master",
            });

            await github.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: createPull.data.number,
              assignees: [
                process.env.MANAGER_GITHUB_USERNAME,
                process.env.REPORT_GITHUB_USERNAME
              ],
            });
